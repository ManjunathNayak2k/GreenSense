name: Replace Old Code with New

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  replace:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Updated Code
        id: process-files
        uses: actions/github-script@v5
        with:
          script: |
            const { owner, repo, number } = context.issue;

            // Get the list of files changed in the PR
            const { data: files } = await github.rest.pulls.listFiles({
              owner, repo, pull_number: number
            });

            const updatedFiles = [];
            const fs = require('fs');

            for (const file of files) {
              // Read file contents
              const fileContent = fs.readFileSync(file.filename, 'utf8');
              
              // Use the built-in fetch function
              const response = await github.request({
                url: 'https://dummyjson.com/products/add',
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                // change content to fileContent
                // body: JSON.stringify({ content: 'hi' , explanation: 'mock explanation'})
                body: JSON.stringify({ "title": "mock"})
              });
              console.log(JSON.stringify({ "title": "mock"}))
              // Assuming the API returns the entire new content of the file
              // change response.data.id to appropriate later
              const newContent = response.data;

              console.log("response:");
              console.log(newContent);
              // Write new content to file
              fs.writeFileSync(file.filename, newContent, 'utf8');

              updatedFiles.push({ path: file.filename, explanation: data.explanation });
            }

            console.log(updatedFiles);

            return {
              updatedFiles
            };
      - name: Commit and Push
        run: |
            git status
      #     git config user.name "GitHub Action"
      #     git config user.email "action@github.com"
      #     git add -A
      #     git commit -m "Replaced old code with new code from API"
      #     git push

      # - name: Comment on PR
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       const { owner, repo, number } = context.issue;

      #       // Combine explanations and create a comment on the PR
      #       const explanations = steps.process-files.outputs.updatedFiles.map(file => `File: ${file.path}\nExplanation: ${file.explanation}`).join("\n\n");
      #       await github.rest.issues.createComment({
      #         owner, repo, issue_number: number, body: explanations
      #       });
