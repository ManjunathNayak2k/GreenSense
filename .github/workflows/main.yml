name: Replace Old Code with New

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize

jobs:
  replace:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Updated Code
        id: process-files
        uses: actions/github-script@v5
        with:
          script: |
            const octokit = github;
            const { owner, repo, number } = context.issue;

            // Get the list of files changed in the PR
            const { data: files } = await octokit.rest.pulls.listFiles({
              owner, repo, pull_number: number
            });

            const updatedFiles = [];

            for (const file of files) {
              const response = await axios.post('https://dummyjson.com/products/add', { path: file.filename });

              // Assuming the API returns the entire new content of the file
              const newContent = response.data.newCode;
              
              // Write new content to file
              const fs = require('fs');
              fs.writeFileSync(file.filename, newContent, 'utf8');

              updatedFiles.push({ path: file.filename, explanation: response.data.explanation });
            }

            return {
              updatedFiles
            };

      - name: Commit and Push
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add -A
          git commit -m "Replaced old code with new code from API"
          git push

      - name: Comment on PR
        uses: actions/github-script@v5
        with:
          script: |
            const octokit = github;
            const { owner, repo, number } = context.issue;
            
            // Combine explanations and create a comment on the PR
            const explanations = steps.process-files.outputs.updatedFiles.map(file => `File: ${file.path}\nExplanation: ${file.explanation}`).join("\n\n");
            await octokit.rest.issues.createComment({
              owner, repo, issue_number: number, body: explanations
            });
